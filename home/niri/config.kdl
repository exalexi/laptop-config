// This config is in the KDL format: https://kdl.dev
// "/-" comments out the following node.
// Check the wiki for a full description of the configuration:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Overview

// Input device configuration.
// Find the full list of options on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Input
environment { 
    DISPLAY ":0"; 
    ELECTRON_OZONE_PLATFORM_HINT "auto";
}

//                         ____
// \\              // ||  |  _ \
//  \\    //\\    //  ||  | |_| |
//   \\  //  \\  //   ||  |____/
//    \\//    \\//    ||  ||



input {
    
    keyboard {
        xkb {
            layout "de"
            variant "nodeadkeys"
        }
        repeat-delay 250
        repeat-rate 100
    }
    
    touchpad {
        tap
        natural-scroll
        accel-profile "flat"
    }

    mouse {
        accel-profile "flat"
    }

    trackpoint {
        off
    }
    
    focus-follows-mouse max-scroll-amount="25%"
    workspace-auto-back-and-forth
}

// You can configure outputs by their name, which you can find
// by running `niri msg outputs` while inside a niri instance.
// The built-in laptop monitor is usually called "eDP-1".
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Outputs
// Remember to uncomment the node by removing "/-"!

output "eDP-1" {
    mode "1920x1080@60.001"
    scale 1
    transform "normal"
    position x=0 y=0
}


output "HDMI-A-1" {
    mode "1920x1080@60.001"
    scale 1
    transform "normal"
    position x=1920 y=0
}


// Settings that influence how windows are positioned and sized.
// Find more information on the wiki:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Layout
layout {
    gaps 10
    center-focused-column "never"

    // You can customize the widths that "switch-preset-column-width" (Mod+R) toggles between.
    preset-column-widths {
        // Proportion sets the width as a fraction of the output width, taking gaps into account.
        // For example, you can perfectly fit four windows sized "proportion 0.25" on an output.
        // The default preset widths are 1/3, 1/2 and 2/3 of the output.
        proportion 0.33333
        proportion 0.5
        proportion 0.66667

        // Fixed sets the width in logical pixels exactly.
        // fixed 1920
    }

    // You can also customize the heights that "switch-preset-window-height" (Mod+Shift+R) toggles between.
    // preset-window-heights { }

    // You can change the default width of the new windows.
    default-column-width { proportion 0.5; }
   
    // You can change how the focus ring looks.
    focus-ring {
        width 2
        // Color of the ring on the active monitor.
        active-color "#f5c2e7"
        // Color of the ring on inactive monitors.
        inactive-color "#f5c2e7"
        // active-gradient from="#f5c2e7" to="#1e1e2e" angle=45
        // inactive-gradient from="#505050" to="#808080" angle=45 relative-to="workspace-view"
    }

    // You can also add a border. It's similar to the focus ring, but always visible.
    border {
        off
    }

    // You can enable drop shadows for windows.
    shadow {
        on
        softness 10
        spread 2
        offset x=0 y=0
        color "#1e1e2e"
    }
}

spawn-at-startup "waybar"
spawn-at-startup "xwayland-satellite"
spawn-at-startup "nm-applet"
spawn-at-startup "swww-daemon"


prefer-no-csd

screenshot-path "~/Pictures/Screenshots/%Y-%m-%d %H-%M-%S.png"

// Animation settings.
// The wiki explains how to configure individual animations:
// https://github.com/YaLTeR/niri/wiki/Configuration:-Animations
animations {
     slowdown 1.5
}

// https://github.com/YaLTeR/niri/wiki/Configuration:-Window-Rules
window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}


// Example: enable rounded corners for all windows.
// (This example rule is commented out with a "/-" in front.)
window-rule {
    geometry-corner-radius 10
    clip-to-geometry true
}

binds {
    Mod+Return { spawn "alacritty"; }
    Mod+D      { spawn "rofi" "-show-icons" "-show" "drun"; }
    Mod+L      { spawn "swaylock"; }

    // You can also use a shell. Do this if you need pipes, multiple commands, etc.
    // Note: the entire command goes as a single argument in the end.
    // Mod+T { spawn "bash" "-c" "notify-send hello && exec alacritty"; }

    // Example volume keys mappings for PipeWire & WirePlumber.
    // The allow-when-locked=true property makes them work even when the session is locked.
    XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

    Mod+Shift+Q { close-window; }

    Mod+Left   { focus-column-left; }
    Mod+Down   { focus-window-or-workspace-down; }
    Mod+Up     { focus-window-or-workspace-up; }
    Mod+Right  { focus-column-right; }

    Mod+M      { focus-column-left; }
    Mod+Comma  { focus-window-or-workspace-down; }
    Mod+K      { focus-window-or-workspace-up; }
    Mod+Period { focus-column-right; }

    Mod+Shift+Left   { move-column-left; }
    Mod+Shift+Down   { move-window-down-or-to-workspace-down; }
    Mod+Shift+Up     { move-window-up-or-to-workspace-up; }
    Mod+Shift+Right  { move-column-right; }

    //Mod+Shift+M      { move-column-left; }
    //Mod+Shift+Comma  { move-window-down-or-to-workspace-down; }
    //Mod+Shift+K      { move-window-up-or-to-workspace-up; }
    //Mod+Shift+Period { move-column-right; }

    // Transform the currently focused screen
    Mod+Ctrl+Shift+Left   { spawn "sh" "-c" "niri msg output `niri msg focused-output | grep Output | grep -Po \"(?<=\\().*?(?=\\))\" | tail -1` transform 270" ; }
    Mod+Ctrl+Shift+Down   { spawn "sh" "-c" "niri msg output `niri msg focused-output | grep Output | grep -Po \"(?<=\\().*?(?=\\))\" | tail -1` transform normal" ; }
    Mod+Ctrl+Shift+Up     { spawn "sh" "-c" "niri msg output `niri msg focused-output | grep Output | grep -Po \"(?<=\\().*?(?=\\))\" | tail -1` transform 180" ; }
    Mod+Ctrl+Shift+Right  { spawn "sh" "-c" "niri msg output `niri msg focused-output | grep Output | grep -Po \"(?<=\\().*?(?=\\))\" | tail -1` transform 90" ; }

    //Mod+Ctrl+Shift+M      { spawn "sh" "-c" "niri msg output `niri msg focused-output | grep Output | grep -Po \"(?<=\\().*?(?=\\))\" | tail -1` transform 270" ; }
    //Mod+Ctrl+Shift+Comma  { spawn "sh" "-c" "niri msg output `niri msg focused-output | grep Output | grep -Po \"(?<=\\().*?(?=\\))\" | tail -1` transform normal" ; }
    //Mod+Ctrl+Shift+K      { spawn "sh" "-c" "niri msg output `niri msg focused-output | grep Output | grep -Po \"(?<=\\().*?(?=\\))\" | tail -1` transform 180" ; }
    //Mod+Ctrl+Shift+Period { spawn "sh" "-c" "niri msg output `niri msg focused-output | grep Output | grep -Po \"(?<=\\().*?(?=\\))\" | tail -1` transform 90" ; }


    // The following binds move the focused window in and out of a column.
    // If the window is alone, they will consume it into the nearby column to the side.
    // If the window is already in a column, they will expel it out.
    Mod+BracketLeft  { consume-or-expel-window-left; }
    Mod+BracketRight { consume-or-expel-window-right; }

    // Consume one window from the right to the bottom of the focused column.
    //Mod+Comma  { consume-window-into-column; }
    // Expel the bottom window from the focused column to the right.
    //Mod+Period { expel-window-from-column; }

    Print { screenshot; }
    Ctrl+Print { screenshot-screen; }
    Alt+Print { screenshot-window; }

    Mod+Tab repeat=false { toggle-overview; }

    Mod+Home { focus-column-first; }
    Mod+End  { focus-column-last; }
    Mod+Shift+Home { move-column-to-first; }
    Mod+Shift+End  { move-column-to-last; }


    // You can bind mouse wheel scroll ticks using the following syntax.
    // These binds will change direction based on the natural-scroll setting.
    //
    // To avoid scrolling through workspaces really fast, you can use
    // the cooldown-ms property. The bind will be rate-limited to this value.
    // You can set a cooldown on any bind, but it's most useful for the wheel.
    Mod+WheelScrollDown    cooldown-ms=50  { focus-workspace-down; }
    Mod+WheelScrollUp       cooldown-ms=50 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=50 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=50 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    // Usually scrolling up and down with Shift in applications results in
    // horizontal scrolling; these binds replicate that.
    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    // Similarly, you can bind touchpad scroll "ticks".
    // Touchpad scrolling is continuous, so for these binds it is split into
    // discrete intervals.
    // These binds are also affected by touchpad's natural-scroll, so these
    // example binds are "inverted", since we have natural-scroll enabled for
    // touchpads by default.
    // Mod+TouchpadScrollDown { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02+"; }
    // Mod+TouchpadScrollUp   { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.02-"; }

    // You can refer to workspaces by index. However, keep in mind that
    // niri is a dynamic workspace system, so these commands are kind of
    // "best effort". Trying to refer to a workspace index bigger than
    // the current workspace count will instead refer to the bottommost
    // (empty) workspace.
    //
    // For example, with 2 workspaces + 1 empty, indices 3, 4, 5 and so on
    // will all refer to the 3rd workspace.
    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Shift+1 { move-window-to-workspace 1; }
    Mod+Shift+2 { move-window-to-workspace 2; }
    Mod+Shift+3 { move-window-to-workspace 3; }
    Mod+Shift+4 { move-window-to-workspace 4; }
    Mod+Shift+5 { move-window-to-workspace 5; }
    Mod+Shift+6 { move-window-to-workspace 6; }
    Mod+Shift+7 { move-window-to-workspace 7; }
    Mod+Shift+8 { move-window-to-workspace 8; }
    Mod+Shift+9 { move-window-to-workspace 9; }



    // Switches focus between the current and the previous workspace.
    // Mod+Tab { focus-workspace-previous; }

    
    Mod+R { switch-preset-column-width; }
    Mod+Shift+R { switch-preset-window-height; }
    Mod+Ctrl+R { reset-window-height; }
    Mod+F { maximize-column; }
    Mod+Shift+F { fullscreen-window; }

    // Expand the focused column to space not taken up by other fully visible columns.
    // Makes the column "fill the rest of the space".
    Mod+Ctrl+F { expand-column-to-available-width; }

    Mod+C { center-column; }

    // Finer width adjustments.
    // This command can also:
    // * set width in pixels: "1000"
    // * adjust width in pixels: "-5" or "+5"
    // * set width as a percentage of screen width: "25%"
    // * adjust width as a percentage of screen width: "-10%" or "+10%"
    // Pixel sizes use logical, or scaled, pixels. I.e. on an output with scale 2.0,
    // set-column-width "100" will make the column occupy 200 physical screen pixels.
    Mod+Minus { set-column-width "-10%"; }
    Mod+Plus { set-column-width "+10%"; }

    // Finer height adjustments when in column with other windows.
    Mod+Shift+Minus { set-window-height "-10%"; }
    Mod+Shift+Plus { set-window-height "+10%"; }

    // Move the focused window between the floating and the tiling layout.
    Mod+Shift+Space       { toggle-window-floating; }
    Mod+Shift+V { switch-focus-between-floating-and-tiling; }

    // Toggle tabbed column display mode.
    // Windows in this column will appear as vertical tabs,
    // rather than stacked on top of each other.
    Mod+W { toggle-column-tabbed-display; }

    // Actions to switch layouts.
    // Note: if you uncomment these, make sure you do NOT have
    // a matching layout switch hotkey configured in xkb options above.
    // Having both at once on the same hotkey will break the switching,
    // since it will switch twice upon pressing the hotkey (once by xkb, once by niri).
    // Mod+Space       { switch-layout "next"; }
    // Mod+Shift+Space { switch-layout "prev"; }

 

    // Applications such as remote-desktop clients and software KVM switches may
    // request that niri stops processing the keyboard shortcuts defined here
    // so they may, for example, forward the key presses as-is to a remote machine.
    // It's a good idea to bind an escape hatch to toggle the inhibitor,
    // so a buggy application can't hold your session hostage.
    //
    // The allow-inhibiting=false property can be applied to other binds as well,
    // which ensures niri always processes them, even when an inhibitor is active.
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // The quit action will show a confirmation dialog to avoid accidental exits.
    Mod+Shift+Ctrl+E { quit; }
    Ctrl+Alt+Delete { quit; }

    // Powers off the monitors. To turn them back on, do any input like
    // moving the mouse or pressing any other key.
    Mod+Shift+P { power-off-monitors; }

    Mod+Shift+E { spawn "rofimoji" "-r" "emoji"; }

    Mod+Ctrl+P  { spawn "rofi" "-show" "power-menu" "-modi" "power-menu:rofi-power-menu"; }
    
    Mod+Ctrl+Shift+N { spawn "nautilus"; }
    Mod+Ctrl+Shift+C { spawn "code"; }
    Mod+Ctrl+Shift+F { spawn "firefox"; }
    Mod+Ctrl+Shift+S { spawn "spotify"; }
    Mod+Ctrl+Shift+D { spawn "vesktop"; }
    Mod+Ctrl+Shift+T { spawn "thunderbird"; }
    
    Mod+Ctrl+Shift+L { spawn "swaylock"; }
    Mod+Space  hotkey-overlay-title="Toggle between de/en keyboards" {  spawn "sh" "-c"; }

}
